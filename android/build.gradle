buildscript {
    // The Android Gradle plugin is only required when opening the android folder stand-alone.
    // This avoids unnecessary downloads and potential conflicts when the library is included as a
    // module dependency in an application project.
    if (project == rootProject) {
        repositories {
            google()
            jcenter()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:3.5.0'
        }
    }
}

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)

        versionCode 1
        versionName "1.0.0"
    }
    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }
}

repositories {
    google()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    jcenter()
}

dependencies {

    def supportLibVersion = safeExtGet('supportLibVersion', '28.0.0')

    def supportLibMajorVersion = supportLibVersion.split('\\.')[0] as int
    def appCompatLibName =  (supportLibMajorVersion < 20) ? "androidx.appcompat:appcompat" : "com.android.support:appcompat-v7"

    implementation "$appCompatLibName:$supportLibVersion"

    def googlePlayServicesAuthVersion = safeExtGet('googlePlayServicesAuthVersion', safeExtGet('googlePlayServicesVersion', '16.0.1'))
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    //noinspection GradleCompatible
    implementation "com.google.android.gms:play-services-auth:$googlePlayServicesAuthVersion"
}
